# .github/workflows/ci.yml
# https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions
name: CI

on:
  push:
    branches: [main, stage, develop]
  pull_request:
    branches: [main, stage, develop]

# Sets the permissions granted to the `GITHUB_TOKEN` for the actions
# in this job.
permissions:
  contents: read
  packages: read

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      # https://taskfile.dev/installation/#github-actions
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        if: steps.cached-venv.outputs.cache-hit != 'true'
        run: task setup:python:dev

      - name: Run linting
        run: |
          black src tests
          pylint

  test:
    runs-on: ubuntu-latest
    environment: staging
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      # https://taskfile.dev/installation/#github-actions
      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}

      - name: Install dependencies
        if: steps.cached-venv.outputs.cache-hit != 'true'
        run: task setup:python:dev

      - name: Run tests
        run: |
          source .venv/bin/activate
          task tests:integration:smoke
          coverage xml

      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v5
      #   with:
      #     files: ./coverage.xml
      #     # fail_ci_if_error: true
